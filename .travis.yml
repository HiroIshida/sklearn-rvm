language: python

cache:
  apt: true
  directories:
  - $HOME/.cache/pip
  - $HOME/.ccache

dist: xenial

env:
  global:
    # Directory where tests are run from
    - OMP_NUM_THREADS=4
    - OPENBLAS_NUM_THREADS=4

matrix:
  include:
    # Linux environment to test scikit-learn against numpy and scipy master
    # installed from their CI wheels in a virtualenv with the Python
    # interpreter provided by travis.
    -  python: 3.7
       env: CHECK_WARNINGS="true"
       if: type = cron OR commit_message =~ /\[scipy-dev\]/

install:
  # install miniconda
  - deactivate
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - MINICONDA_PATH=/home/travis/miniconda
  - chmod +x miniconda.sh && ./miniconda.sh -b -p $MINICONDA_PATH
  - export PATH=$MINICONDA_PATH/bin:$PATH
  - conda update --yes conda
  # create the testing environment
  - conda create -n testenv --yes python=3.7
  - source activate testenv
  - pip install --upgrade pip setuptools
  - echo "Installing numpy and scipy master wheels"
  - dev_url=https://7933911d6844c6c53a7d-47bd50c35cd79bd838daf386af554a83.ssl.cf2.rackcdn.com
  - pip install --pre --upgrade --timeout=60 -f $dev_url numpy scipy pandas cython scikit-learn
  - pip install pytest==4.6.4 pytest-cov
  # Build scikit-learn in the install.sh script to collapse the verbose
  # build output in the travis output when it succeeds.
  - python --version
  - python -c "import numpy; print('numpy %s' % numpy.__version__)"
  - python -c "import scipy; print('scipy %s' % scipy.__version__)"
  - pip install .

script:
  - mkdir for_test
  - cd for_test
  - pytest -v --cov=sklearn_rvm --pyargs sklearn_rvm

after_success:
  - codecov
